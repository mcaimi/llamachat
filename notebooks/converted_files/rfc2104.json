{"schema_name": "DoclingDocument", "version": "1.5.0", "name": "rfc2104", "origin": {"mimetype": "application/pdf", "binary_hash": 12747453790052234477, "filename": "rfc2104.pdf"}, "furniture": {"self_ref": "#/furniture", "children": [], "content_layer": "furniture", "name": "_root_", "label": "unspecified"}, "body": {"self_ref": "#/body", "children": [{"$ref": "#/groups/0"}, {"$ref": "#/texts/5"}, {"$ref": "#/groups/1"}, {"$ref": "#/texts/6"}, {"$ref": "#/texts/7"}, {"$ref": "#/texts/8"}, {"$ref": "#/texts/9"}, {"$ref": "#/texts/10"}, {"$ref": "#/texts/11"}, {"$ref": "#/groups/2"}, {"$ref": "#/texts/13"}, {"$ref": "#/texts/14"}, {"$ref": "#/groups/3"}, {"$ref": "#/texts/20"}, {"$ref": "#/texts/21"}, {"$ref": "#/texts/22"}, {"$ref": "#/texts/23"}, {"$ref": "#/texts/24"}, {"$ref": "#/texts/25"}, {"$ref": "#/texts/26"}, {"$ref": "#/texts/27"}, {"$ref": "#/texts/28"}, {"$ref": "#/texts/29"}, {"$ref": "#/texts/30"}, {"$ref": "#/groups/4"}, {"$ref": "#/texts/38"}, {"$ref": "#/texts/39"}, {"$ref": "#/texts/40"}, {"$ref": "#/texts/41"}, {"$ref": "#/texts/42"}, {"$ref": "#/texts/43"}, {"$ref": "#/texts/44"}, {"$ref": "#/texts/45"}, {"$ref": "#/texts/46"}, {"$ref": "#/texts/47"}, {"$ref": "#/texts/48"}, {"$ref": "#/texts/49"}, {"$ref": "#/texts/50"}, {"$ref": "#/texts/51"}, {"$ref": "#/texts/52"}, {"$ref": "#/texts/53"}, {"$ref": "#/texts/54"}, {"$ref": "#/texts/55"}, {"$ref": "#/texts/56"}, {"$ref": "#/texts/57"}, {"$ref": "#/groups/5"}, {"$ref": "#/texts/60"}, {"$ref": "#/texts/61"}, {"$ref": "#/texts/62"}, {"$ref": "#/texts/63"}, {"$ref": "#/texts/64"}, {"$ref": "#/texts/65"}, {"$ref": "#/texts/66"}, {"$ref": "#/texts/67"}, {"$ref": "#/texts/68"}, {"$ref": "#/texts/69"}, {"$ref": "#/texts/70"}, {"$ref": "#/texts/71"}, {"$ref": "#/texts/72"}, {"$ref": "#/texts/73"}, {"$ref": "#/groups/6"}, {"$ref": "#/groups/7"}, {"$ref": "#/texts/85"}, {"$ref": "#/groups/8"}, {"$ref": "#/texts/94"}, {"$ref": "#/texts/95"}, {"$ref": "#/texts/96"}, {"$ref": "#/texts/97"}, {"$ref": "#/groups/9"}, {"$ref": "#/texts/104"}, {"$ref": "#/texts/105"}, {"$ref": "#/groups/10"}, {"$ref": "#/texts/111"}, {"$ref": "#/texts/112"}, {"$ref": "#/texts/113"}, {"$ref": "#/texts/114"}, {"$ref": "#/texts/115"}, {"$ref": "#/texts/116"}, {"$ref": "#/texts/117"}, {"$ref": "#/groups/11"}], "content_layer": "body", "name": "_root_", "label": "unspecified"}, "groups": [{"self_ref": "#/groups/0", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/0"}, {"$ref": "#/texts/1"}, {"$ref": "#/texts/2"}, {"$ref": "#/texts/3"}, {"$ref": "#/texts/4"}], "content_layer": "body", "name": "group", "label": "key_value_area"}, {"self_ref": "#/groups/1", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "name": "group", "label": "key_value_area"}, {"self_ref": "#/groups/2", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/12"}], "content_layer": "body", "name": "group", "label": "key_value_area"}, {"self_ref": "#/groups/3", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/15"}, {"$ref": "#/texts/16"}, {"$ref": "#/texts/17"}, {"$ref": "#/texts/18"}, {"$ref": "#/texts/19"}], "content_layer": "body", "name": "list", "label": "list"}, {"self_ref": "#/groups/4", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/31"}, {"$ref": "#/texts/32"}, {"$ref": "#/texts/33"}, {"$ref": "#/texts/34"}, {"$ref": "#/texts/35"}, {"$ref": "#/texts/36"}, {"$ref": "#/texts/37"}], "content_layer": "body", "name": "list", "label": "list"}, {"self_ref": "#/groups/5", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/58"}, {"$ref": "#/texts/59"}], "content_layer": "body", "name": "list", "label": "list"}, {"self_ref": "#/groups/6", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/74"}, {"$ref": "#/texts/75"}, {"$ref": "#/texts/76"}, {"$ref": "#/texts/77"}, {"$ref": "#/texts/78"}, {"$ref": "#/texts/79"}, {"$ref": "#/texts/80"}, {"$ref": "#/texts/81"}, {"$ref": "#/texts/82"}, {"$ref": "#/texts/83"}], "content_layer": "body", "name": "group", "label": "key_value_area"}, {"self_ref": "#/groups/7", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/84"}], "content_layer": "body", "name": "group", "label": "key_value_area"}, {"self_ref": "#/groups/8", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/86"}, {"$ref": "#/texts/87"}, {"$ref": "#/texts/88"}, {"$ref": "#/texts/89"}, {"$ref": "#/texts/90"}, {"$ref": "#/texts/91"}, {"$ref": "#/texts/92"}, {"$ref": "#/texts/93"}], "content_layer": "body", "name": "group", "label": "key_value_area"}, {"self_ref": "#/groups/9", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/98"}, {"$ref": "#/texts/99"}, {"$ref": "#/texts/100"}, {"$ref": "#/texts/101"}, {"$ref": "#/texts/102"}, {"$ref": "#/texts/103"}], "content_layer": "body", "name": "list", "label": "list"}, {"self_ref": "#/groups/10", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/106"}, {"$ref": "#/texts/107"}, {"$ref": "#/texts/108"}, {"$ref": "#/texts/109"}, {"$ref": "#/texts/110"}], "content_layer": "body", "name": "list", "label": "list"}, {"self_ref": "#/groups/11", "parent": {"$ref": "#/body"}, "children": [{"$ref": "#/texts/118"}], "content_layer": "body", "name": "group", "label": "key_value_area"}], "texts": [{"self_ref": "#/texts/0", "parent": {"$ref": "#/groups/0"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.22000122070312, "t": 695.3300170898438, "r": 505.94000244140625, "b": 665.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 99]}], "orig": "Network Working Group H. Krawczyk Request for Comments: 2104 IBM Category: Informational M. Bellare", "text": "Network Working Group H. Krawczyk Request for Comments: 2104 IBM Category: Informational M. Bellare"}, {"self_ref": "#/texts/1", "parent": {"$ref": "#/groups/0"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.0, "t": 661.8400268554688, "r": 505.5799865722656, "b": 655.8499755859375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 4]}], "orig": "UCSD", "text": "UCSD"}, {"self_ref": "#/texts/2", "parent": {"$ref": "#/groups/0"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.0, "t": 651.3300170898438, "r": 505.1099853515625, "b": 644.8499755859375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 10]}], "orig": "R. Canetti", "text": "R. Canetti"}, {"self_ref": "#/texts/3", "parent": {"$ref": "#/groups/0"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.0, "t": 639.7100219726562, "r": 505.94000244140625, "b": 634.0, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 3]}], "orig": "IBM", "text": "IBM"}, {"self_ref": "#/texts/4", "parent": {"$ref": "#/groups/0"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.0, "t": 629.27001953125, "r": 504.7900085449219, "b": 621.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 13]}], "orig": "February 1997", "text": "February 1997"}, {"self_ref": "#/texts/5", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.0, "t": 596.3300170898438, "r": 433.4200134277344, "b": 588.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 46]}], "orig": "HMAC: Keyed-Hashing for Message Authentication", "text": "HMAC: Keyed-Hashing for Message Authentication"}, {"self_ref": "#/texts/6", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.9000015258789, "t": 574.3300170898438, "r": 193.29000854492188, "b": 567.8499755859375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 19]}], "orig": "Status of This Memo", "text": "Status of This Memo"}, {"self_ref": "#/texts/7", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.0, "t": 552.3300170898438, "r": 511.2900085449219, "b": 523.8499755859375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 159]}], "orig": "This memo provides information for the Internet community. This memo does not specify an Internet standard of any kind. Distribution of this memo is unlimited.", "text": "This memo provides information for the Internet community. This memo does not specify an Internet standard of any kind. Distribution of this memo is unlimited."}, {"self_ref": "#/texts/8", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 1, "bbox": {"l": 80.08000183105469, "t": 508.1300048828125, "r": 127.29000091552734, "b": 501.8500061035156, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 8]}], "orig": "Abstract", "text": "Abstract", "level": 1}, {"self_ref": "#/texts/9", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.0, "t": 486.3299865722656, "r": 505.44000244140625, "b": 434.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 322]}], "orig": "This document describes HMAC, a mechanism for message authentication using cryptographic hash functions. HMAC can be used with any iterative cryptographic hash function, e.g., MD5, SHA-1, in combination with a secret shared key. The cryptographic strength of HMAC depends on the properties of the underlying hash function.", "text": "This document describes HMAC, a mechanism for message authentication using cryptographic hash functions. HMAC can be used with any iterative cryptographic hash function, e.g., MD5, SHA-1, in combination with a secret shared key. The cryptographic strength of HMAC depends on the properties of the underlying hash function."}, {"self_ref": "#/texts/10", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 1, "bbox": {"l": 81.11000061035156, "t": 420.3299865722656, "r": 169.4199981689453, "b": 413.8500061035156, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 15]}], "orig": "1. Introduction", "text": "1. Introduction", "level": 1}, {"self_ref": "#/texts/11", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.0, "t": 398.3299865722656, "r": 511.8299865722656, "b": 258.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 819]}], "orig": "Providing a way to check the integrity of information transmitted over or stored in an unreliable medium is a prime necessity in the world of open computing and communications. Mechanisms that provide such integrity check based on a secret key are usually called \"message authentication codes\" (MAC). Typically, message authentication codes are used between two parties that share a secret key in order to validate information transmitted between these parties. In this document we present such a MAC mechanism based on cryptographic hash functions. This mechanism, called HMAC, is based on work by the authors [BCK1] where the construction is presented and cryptographically analyzed. We refer to that work for the details on the rationale and security analysis of HMAC, and its comparison to other keyed-hash methods.", "text": "Providing a way to check the integrity of information transmitted over or stored in an unreliable medium is a prime necessity in the world of open computing and communications. Mechanisms that provide such integrity check based on a secret key are usually called \"message authentication codes\" (MAC). Typically, message authentication codes are used between two parties that share a secret key in order to validate information transmitted between these parties. In this document we present such a MAC mechanism based on cryptographic hash functions. This mechanism, called HMAC, is based on work by the authors [BCK1] where the construction is presented and cryptographically analyzed. We refer to that work for the details on the rationale and security analysis of HMAC, and its comparison to other keyed-hash methods."}, {"self_ref": "#/texts/12", "parent": {"$ref": "#/groups/2"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 1, "bbox": {"l": 80.43000030517578, "t": 134.3300018310547, "r": 509.2200012207031, "b": 126.12999725341797, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "Krawczyk, et. al. Informational [Page 1]", "text": "Krawczyk, et. al. Informational [Page 1]"}, {"self_ref": "#/texts/13", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 2, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/14", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 2, "bbox": {"l": 80.0, "t": 717.3300170898438, "r": 505.5299987792969, "b": 666.8499755859375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 272]}], "orig": "HMAC can be used in combination with any iterated cryptographic hash function. MD5 and SHA-1 are examples of such hash functions. HMAC also uses a secret key for calculation and verification of the message authentication values. The main goals behind this construction are", "text": "HMAC can be used in combination with any iterated cryptographic hash function. MD5 and SHA-1 are examples of such hash functions. HMAC also uses a secret key for calculation and verification of the message authentication values. The main goals behind this construction are"}, {"self_ref": "#/texts/15", "parent": {"$ref": "#/groups/3"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 2, "bbox": {"l": 80.0, "t": 651.3300170898438, "r": 467.5199890136719, "b": 621.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 170]}], "orig": "* To use, without modifications, available hash functions. In particular, hash functions that perform well in software, and for which code is freely and widely available.", "text": "To use, without modifications, available hash functions. In particular, hash functions that perform well in software, and for which code is freely and widely available.", "enumerated": false, "marker": "*"}, {"self_ref": "#/texts/16", "parent": {"$ref": "#/groups/3"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 2, "bbox": {"l": 80.0, "t": 607.3300170898438, "r": 499.2900085449219, "b": 588.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 104]}], "orig": "* To preserve the original performance of the hash function without incurring a significant degradation.", "text": "To preserve the original performance of the hash function without incurring a significant degradation.", "enumerated": false, "marker": "*"}, {"self_ref": "#/texts/17", "parent": {"$ref": "#/groups/3"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 2, "bbox": {"l": 80.0, "t": 574.3300170898438, "r": 341.75, "b": 566.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 41]}], "orig": "* To use and handle keys in a simple way.", "text": "To use and handle keys in a simple way.", "enumerated": false, "marker": "*"}, {"self_ref": "#/texts/18", "parent": {"$ref": "#/groups/3"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 2, "bbox": {"l": 80.0, "t": 552.3300170898438, "r": 511.44000244140625, "b": 522.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 163]}], "orig": "* To have a well understood cryptographic analysis of the strength of the authentication mechanism based on reasonable assumptions on the underlying hash function.", "text": "To have a well understood cryptographic analysis of the strength of the authentication mechanism based on reasonable assumptions on the underlying hash function.", "enumerated": false, "marker": "*"}, {"self_ref": "#/texts/19", "parent": {"$ref": "#/groups/3"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 2, "bbox": {"l": 80.0, "t": 508.3299865722656, "r": 511.4200134277344, "b": 478.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 139]}], "orig": "* To allow for easy replaceability of the underlying hash function in case that faster or more secure hash functions are found or required.", "text": "To allow for easy replaceability of the underlying hash function in case that faster or more secure hash functions are found or required.", "enumerated": false, "marker": "*"}, {"self_ref": "#/texts/20", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 2, "bbox": {"l": 80.0, "t": 464.3299865722656, "r": 499.5299987792969, "b": 401.54998779296875, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 358]}], "orig": "This document specifies HMAC using a generic cryptographic hash function (denoted by H). Specific instantiations of HMAC need to define a particular hash function. Current candidates for such hash functions include SHA-1 [SHA], MD5 [MD5], RIPEMD-128/160 [RIPEMD]. These different realizations of HMAC will be denoted by HMAC-SHA1, HMAC-MD5, HMAC-RIPEMD, etc.", "text": "This document specifies HMAC using a generic cryptographic hash function (denoted by H). Specific instantiations of HMAC need to define a particular hash function. Current candidates for such hash functions include SHA-1 [SHA], MD5 [MD5], RIPEMD-128/160 [RIPEMD]. These different realizations of HMAC will be denoted by HMAC-SHA1, HMAC-MD5, HMAC-RIPEMD, etc."}, {"self_ref": "#/texts/21", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 2, "bbox": {"l": 80.0, "t": 387.3299865722656, "r": 505.739990234375, "b": 247.74000549316406, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 798]}], "orig": "Note: To the date of writing of this document MD5 and SHA-1 are the most widely used cryptographic hash functions. MD5 has been recently shown to be vulnerable to collision search attacks [Dobb]. This attack and other currently known weaknesses of MD5 do not compromise the use of MD5 within HMAC as specified in this document (see [Dobb]); however, SHA-1 appears to be a cryptographically stronger function. To this date, MD5 can be considered for use in HMAC for applications where the superior performance of MD5 is critical. In any case, implementers and users need to be aware of possible cryptanalytic developments regarding any of these cryptographic hash functions, and the eventual need to replace the underlying hash function. (See section 6 for more information on the security of HMAC.)", "text": "Note: To the date of writing of this document MD5 and SHA-1 are the most widely used cryptographic hash functions. MD5 has been recently shown to be vulnerable to collision search attacks [Dobb]. This attack and other currently known weaknesses of MD5 do not compromise the use of MD5 within HMAC as specified in this document (see [Dobb]); however, SHA-1 appears to be a cryptographically stronger function. To this date, MD5 can be considered for use in HMAC for applications where the superior performance of MD5 is critical. In any case, implementers and users need to be aware of possible cryptanalytic developments regarding any of these cryptographic hash functions, and the eventual need to replace the underlying hash function. (See section 6 for more information on the security of HMAC.)"}, {"self_ref": "#/texts/22", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 2, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "Krawczyk, et. al. Informational [Page 2]", "text": "Krawczyk, et. al. Informational [Page 2]"}, {"self_ref": "#/texts/23", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 3, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/24", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 3, "bbox": {"l": 80.83000183105469, "t": 717.3300170898438, "r": 205.3699951171875, "b": 710.8499755859375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 21]}], "orig": "2. Definition of HMAC", "text": "2. Definition of HMAC", "level": 1}, {"self_ref": "#/texts/25", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 695.3300170898438, "r": 511.44000244140625, "b": 566.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 790]}], "orig": "The definition of HMAC requires a cryptographic hash function, which we denote by H, and a secret key K. We assume H to be a cryptographic hash function where data is hashed by iterating a basic compression function on blocks of data. We denote by B the byte-length of such blocks (B=64 for all the above mentioned examples of hash functions), and by L the byte-length of hash outputs (L=16 for MD5, L=20 for SHA-1). The authentication key K can be of any length up to B, the block length of the hash function. Applications that use keys longer than B bytes will first hash the key using H and then use the resultant L byte string as the actual key to HMAC. In any case the minimal recommended length for K is L bytes (as the hash output length). See section 3 for more information on keys.", "text": "The definition of HMAC requires a cryptographic hash function, which we denote by H, and a secret key K. We assume H to be a cryptographic hash function where data is hashed by iterating a basic compression function on blocks of data. We denote by B the byte-length of such blocks (B=64 for all the above mentioned examples of hash functions), and by L the byte-length of hash outputs (L=16 for MD5, L=20 for SHA-1). The authentication key K can be of any length up to B, the block length of the hash function. Applications that use keys longer than B bytes will first hash the key using H and then use the resultant L byte string as the actual key to HMAC. In any case the minimal recommended length for K is L bytes (as the hash output length). See section 3 for more information on keys."}, {"self_ref": "#/texts/26", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 552.3300170898438, "r": 492.989990234375, "b": 533.739990234375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 119]}], "orig": "We define two fixed and different strings ipad and opad as follows (the 'i' and 'o' are mnemonics for inner and outer):", "text": "We define two fixed and different strings ipad and opad as follows (the 'i' and 'o' are mnemonics for inner and outer):"}, {"self_ref": "#/texts/27", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 519.3300170898438, "r": 414.989990234375, "b": 500.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 76]}], "orig": "ipad = the byte 0x36 repeated B times opad = the byte 0x5C repeated B times.", "text": "ipad = the byte 0x36 repeated B times opad = the byte 0x5C repeated B times."}, {"self_ref": "#/texts/28", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 486.1300048828125, "r": 379.92999267578125, "b": 478.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 47]}], "orig": "To compute HMAC over the data \u2018text\u2019 we perform", "text": "To compute HMAC over the data \u2018text\u2019 we perform"}, {"self_ref": "#/texts/29", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 464.3299865722656, "r": 401.1199951171875, "b": 456.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 34]}], "orig": "H(K XOR opad, H(K XOR ipad, text))", "text": "H(K XOR opad, H(K XOR ipad, text))"}, {"self_ref": "#/texts/30", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 442.1300048828125, "r": 137.52000427246094, "b": 434.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 7]}], "orig": "Namely,", "text": "Namely,"}, {"self_ref": "#/texts/31", "parent": {"$ref": "#/groups/4"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 420.3299865722656, "r": 475.2300109863281, "b": 390.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 151]}], "orig": "(1) append zeros to the end of K to create a B byte string (e.g., if K is of length 20 bytes and B=64, then K will be appended with 44 zero bytes 0x00)", "text": "append zeros to the end of K to create a B byte string (e.g., if K is of length 20 bytes and B=64, then K will be appended with 44 zero bytes 0x00)", "enumerated": true, "marker": "(1)"}, {"self_ref": "#/texts/32", "parent": {"$ref": "#/groups/4"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 387.3299865722656, "r": 493.4200134277344, "b": 368.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 79]}], "orig": "(2) XOR (bitwise exclusive-OR) the B byte string computed in step (1) with ipad", "text": "XOR (bitwise exclusive-OR) the B byte string computed in step (1) with ipad", "enumerated": true, "marker": "(2)"}, {"self_ref": "#/texts/33", "parent": {"$ref": "#/groups/4"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 365.3299865722656, "r": 505.6199951171875, "b": 346.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 81]}], "orig": "(3) append the stream of data 'text' to the B byte string resulting from step (2)", "text": "append the stream of data 'text' to the B byte string resulting from step (2)", "enumerated": true, "marker": "(3)"}, {"self_ref": "#/texts/34", "parent": {"$ref": "#/groups/4"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 343.3299865722656, "r": 383.1199951171875, "b": 335.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 47]}], "orig": "(4) apply H to the stream generated in step (3)", "text": "apply H to the stream generated in step (3)", "enumerated": true, "marker": "(4)"}, {"self_ref": "#/texts/35", "parent": {"$ref": "#/groups/4"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 332.3299865722656, "r": 463.4200134277344, "b": 313.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 79]}], "orig": "(5) XOR (bitwise exclusive-OR) the B byte string computed in step (1) with opad", "text": "XOR (bitwise exclusive-OR) the B byte string computed in step (1) with opad", "enumerated": true, "marker": "(5)"}, {"self_ref": "#/texts/36", "parent": {"$ref": "#/groups/4"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 310.3299865722656, "r": 451.6199951171875, "b": 291.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 82]}], "orig": "(6) append the H result from step (4) to the B byte string resulting from step (5)", "text": "append the H result from step (4) to the B byte string resulting from step (5)", "enumerated": true, "marker": "(6)"}, {"self_ref": "#/texts/37", "parent": {"$ref": "#/groups/4"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 3, "bbox": {"l": 80.0, "t": 288.3299865722656, "r": 451.2900085449219, "b": 270.8500061035156, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 69]}], "orig": "(7) apply H to the stream generated in step (6) and output the result", "text": "apply H to the stream generated in step (6) and output the result", "enumerated": true, "marker": "(7)"}, {"self_ref": "#/texts/38", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 3, "bbox": {"l": 98.69999694824219, "t": 255.3300018310547, "r": 511.4200134277344, "b": 236.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 79]}], "orig": "For illustration purposes, sample code based on MD5 is provided as an appendix.", "text": "For illustration purposes, sample code based on MD5 is provided as an appendix."}, {"self_ref": "#/texts/39", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "code", "prov": [{"page_no": 3, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "Krawczyk, et. al. Informational [Page 3]", "text": "Krawczyk, et. al. Informational [Page 3]", "captions": [], "references": [], "footnotes": [], "code_language": "unknown"}, {"self_ref": "#/texts/40", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 4, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/41", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 4, "bbox": {"l": 80.94999694824219, "t": 717.27001953125, "r": 120.98999786376953, "b": 709.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 7]}], "orig": "3. Keys", "text": "3. Keys", "level": 1}, {"self_ref": "#/texts/42", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 4, "bbox": {"l": 80.0, "t": 695.1300048828125, "r": 499.2300109863281, "b": 621.739990234375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 399]}], "orig": "The key for HMAC can be of any length (keys longer than B bytes are first hashed using H). However, less than L bytes is strongly discouraged as it would decrease the security strength of the function. Keys longer than L bytes are acceptable but the extra length would not significantly increase the function strength. (A longer key may be advisable if the randomness of the key is considered weak.)", "text": "The key for HMAC can be of any length (keys longer than B bytes are first hashed using H). However, less than L bytes is strongly discouraged as it would decrease the security strength of the function. Keys longer than L bytes are acceptable but the extra length would not significantly increase the function strength. (A longer key may be advisable if the randomness of the key is considered weak.)"}, {"self_ref": "#/texts/43", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 4, "bbox": {"l": 80.0, "t": 607.3300170898438, "r": 511.6199951171875, "b": 533.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 453]}], "orig": "Keys need to be chosen at random (or using a cryptographically strong pseudo-random generator seeded with a random seed), and periodically refreshed. (Current attacks do not indicate a specific recommended frequency for key changes as these attacks are practically infeasible. However, periodic key refreshment is a fundamental security practice that helps against potential weaknesses of the function and keys, and limits the damage of an exposed key.)", "text": "Keys need to be chosen at random (or using a cryptographically strong pseudo-random generator seeded with a random seed), and periodically refreshed. (Current attacks do not indicate a specific recommended frequency for key changes as these attacks are practically infeasible. However, periodic key refreshment is a fundamental security practice that helps against potential weaknesses of the function and keys, and limits the damage of an exposed key.)"}, {"self_ref": "#/texts/44", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 4, "bbox": {"l": 81.04000091552734, "t": 519.3300170898438, "r": 211.22999572753906, "b": 511.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 22]}], "orig": "4. Implementation Note", "text": "4. Implementation Note", "level": 1}, {"self_ref": "#/texts/45", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 4, "bbox": {"l": 80.0, "t": 497.3299865722656, "r": 511.4200134277344, "b": 423.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 423]}], "orig": "HMAC is defined in such a way that the underlying hash function H can be used with no modification to its code. In particular, it uses the function H with the pre-defined initial value IV (a fixed value specified by each iterative hash function to initialize its compression function). However, if desired, a performance improvement can be achieved at the cost of (possibly) modifying the code of H to support variable IVs.", "text": "HMAC is defined in such a way that the underlying hash function H can be used with no modification to its code. In particular, it uses the function H with the pre-defined initial value IV (a fixed value specified by each iterative hash function to initialize its compression function). However, if desired, a performance improvement can be achieved at the cost of (possibly) modifying the code of H to support variable IVs."}, {"self_ref": "#/texts/46", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 4, "bbox": {"l": 80.0, "t": 409.3299865722656, "r": 511.8299865722656, "b": 291.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 688]}], "orig": "The idea is that the intermediate results of the compression function on the B-byte blocks (K XOR ipad) and (K XOR opad) can be precomputed only once at the time of generation of the key K, or before its first use. These intermediate results are stored and then used to initialize the IV of H each time that a message needs to be authenticated. This method saves, for each authenticated message, the application of the compression function of H on two B-byte blocks (i.e., on (K XOR ipad) and (K XOR opad)). Such a savings may be significant when authenticating short streams of data. We stress that the stored intermediate values need to be treated and protected the same as secret keys.", "text": "The idea is that the intermediate results of the compression function on the B-byte blocks (K XOR ipad) and (K XOR opad) can be precomputed only once at the time of generation of the key K, or before its first use. These intermediate results are stored and then used to initialize the IV of H each time that a message needs to be authenticated. This method saves, for each authenticated message, the application of the compression function of H on two B-byte blocks (i.e., on (K XOR ipad) and (K XOR opad)). Such a savings may be significant when authenticating short streams of data. We stress that the stored intermediate values need to be treated and protected the same as secret keys."}, {"self_ref": "#/texts/47", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 4, "bbox": {"l": 80.0, "t": 277.3299865722656, "r": 481.2300109863281, "b": 258.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 125]}], "orig": "Choosing to implement HMAC in the above way is a decision of the local implementation and has no effect on inter-operability.", "text": "Choosing to implement HMAC in the above way is a decision of the local implementation and has no effect on inter-operability."}, {"self_ref": "#/texts/48", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 4, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "Krawczyk, et. al. Informational [Page 4]", "text": "Krawczyk, et. al. Informational [Page 4]"}, {"self_ref": "#/texts/49", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 5, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/50", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 5, "bbox": {"l": 80.95999908447266, "t": 717.1300048828125, "r": 193.29000854492188, "b": 709.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 19]}], "orig": "5. Truncated output", "text": "5. Truncated output", "level": 1}, {"self_ref": "#/texts/51", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 5, "bbox": {"l": 80.0, "t": 695.3300170898438, "r": 511.3699951171875, "b": 467.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 1344]}], "orig": "A well-known practice with message authentication codes is to truncate the output of the MAC and output only part of the bits (e.g., [MM, ANSI]). Preneel and van Oorschot [PV] show some analytical advantages of truncating the output of hash-based MAC functions. The results in this area are not absolute as for the overall security advantages of truncation. It has advantages (less information on the hash result available to an attacker) and disadvantages (less bits to predict for the attacker). Applications of HMAC can choose to truncate the output of HMAC by outputting the t leftmost bits of the HMAC computation for some parameter t (namely, the computation is carried in the normal way as defined in section 2 above but the end result is truncated to t bits). We recommend that the output length t be not less than half the length of the hash output (to match the birthday attack bound) and not less than 80 bits (a suitable lower bound on the number of bits that need to be predicted by an attacker). We propose denoting a realization of HMAC that uses a hash function H with t bits of output as HMAC-H-t. For example, HMAC-SHA1-80 denotes HMAC computed using the SHA-1 function and with the output truncated to 80 bits. (If the parameter t is not specified, e.g. HMAC-MD5, then it is assumed that all the bits of the hash are output.)", "text": "A well-known practice with message authentication codes is to truncate the output of the MAC and output only part of the bits (e.g., [MM, ANSI]). Preneel and van Oorschot [PV] show some analytical advantages of truncating the output of hash-based MAC functions. The results in this area are not absolute as for the overall security advantages of truncation. It has advantages (less information on the hash result available to an attacker) and disadvantages (less bits to predict for the attacker). Applications of HMAC can choose to truncate the output of HMAC by outputting the t leftmost bits of the HMAC computation for some parameter t (namely, the computation is carried in the normal way as defined in section 2 above but the end result is truncated to t bits). We recommend that the output length t be not less than half the length of the hash output (to match the birthday attack bound) and not less than 80 bits (a suitable lower bound on the number of bits that need to be predicted by an attacker). We propose denoting a realization of HMAC that uses a hash function H with t bits of output as HMAC-H-t. For example, HMAC-SHA1-80 denotes HMAC computed using the SHA-1 function and with the output truncated to 80 bits. (If the parameter t is not specified, e.g. HMAC-MD5, then it is assumed that all the bits of the hash are output.)"}, {"self_ref": "#/texts/52", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 5, "bbox": {"l": 81.33999633789062, "t": 453.3299865722656, "r": 145.739990234375, "b": 445.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 11]}], "orig": "6. Security", "text": "6. Security", "level": 1}, {"self_ref": "#/texts/53", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 5, "bbox": {"l": 80.0, "t": 431.3299865722656, "r": 511.4200134277344, "b": 335.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 590]}], "orig": "The security of the message authentication mechanism presented here depends on cryptographic properties of the hash function H: the resistance to collision finding (limited to the case where the initial value is secret and random, and where the output of the function is not explicitly available to the attacker), and the message authentication property of the compression function of H when applied to single blocks (in HMAC these blocks are partially unknown to an attacker as they contain the result of the inner H computation and, in particular, cannot be fully chosen by the attacker).", "text": "The security of the message authentication mechanism presented here depends on cryptographic properties of the hash function H: the resistance to collision finding (limited to the case where the initial value is secret and random, and where the output of the function is not explicitly available to the attacker), and the message authentication property of the compression function of H when applied to single blocks (in HMAC these blocks are partially unknown to an attacker as they contain the result of the inner H computation and, in particular, cannot be fully chosen by the attacker)."}, {"self_ref": "#/texts/54", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 5, "bbox": {"l": 80.0, "t": 321.3299865722656, "r": 505.5299987792969, "b": 247.74000549316406, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 437]}], "orig": "These properties, and actually stronger ones, are commonly assumed for hash functions of the kind used with HMAC. In particular, a hash function for which the above properties do not hold would become unsuitable for most (probably, all) cryptographic applications, including alternative message authentication schemes based on such functions. (For a complete analysis and rationale of the HMAC function the reader is referred to [BCK1].)", "text": "These properties, and actually stronger ones, are commonly assumed for hash functions of the kind used with HMAC. In particular, a hash function for which the above properties do not hold would become unsuitable for most (probably, all) cryptographic applications, including alternative message authentication schemes based on such functions. (For a complete analysis and rationale of the HMAC function the reader is referred to [BCK1].)"}, {"self_ref": "#/texts/55", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 5, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "Krawczyk, et. al. Informational [Page 5]", "text": "Krawczyk, et. al. Informational [Page 5]"}, {"self_ref": "#/texts/56", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 6, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/57", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 6, "bbox": {"l": 80.0, "t": 717.3300170898438, "r": 505.2300109863281, "b": 676.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 233]}], "orig": "Given the limited confidence gained so far as for the cryptographic strength of candidate hash functions, it is important to observe the following two properties of the HMAC construction and its secure use for message authentication:", "text": "Given the limited confidence gained so far as for the cryptographic strength of candidate hash functions, it is important to observe the following two properties of the HMAC construction and its secure use for message authentication:"}, {"self_ref": "#/texts/58", "parent": {"$ref": "#/groups/5"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 6, "bbox": {"l": 80.0, "t": 662.3300170898438, "r": 499.44000244140625, "b": 632.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 187]}], "orig": "1. The construction is independent of the details of the particular hash function H in use and then the latter can be replaced by any other secure (iterative) cryptographic hash function.", "text": "The construction is independent of the details of the particular hash function H in use and then the latter can be replaced by any other secure (iterative) cryptographic hash function.", "enumerated": true, "marker": "1."}, {"self_ref": "#/texts/59", "parent": {"$ref": "#/groups/5"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 6, "bbox": {"l": 80.0, "t": 618.3300170898438, "r": 510.989990234375, "b": 544.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 425]}], "orig": "2. Message authentication, as opposed to encryption, has a \"transient\" effect. A published breaking of a message authentication scheme would lead to the replacement of that scheme, but would have no adversarial effect on information authenticated in the past. This is in sharp contrast with encryption, where information encrypted today may suffer from exposure in the future if, and when, the encryption algorithm is broken.", "text": "Message authentication, as opposed to encryption, has a \"transient\" effect. A published breaking of a message authentication scheme would lead to the replacement of that scheme, but would have no adversarial effect on information authenticated in the past. This is in sharp contrast with encryption, where information encrypted today may suffer from exposure in the future if, and when, the encryption algorithm is broken.", "enumerated": true, "marker": "2."}, {"self_ref": "#/texts/60", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 6, "bbox": {"l": 80.0, "t": 530.3300170898438, "r": 511.8299865722656, "b": 500.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 202]}], "orig": "The strongest attack known against HMAC is based on the frequency of collisions for the hash function H (\"birthday attack\") [PV,BCK2], and is totally impractical for minimally reasonable hash functions.", "text": "The strongest attack known against HMAC is based on the frequency of collisions for the hash function H (\"birthday attack\") [PV,BCK2], and is totally impractical for minimally reasonable hash functions."}, {"self_ref": "#/texts/61", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 6, "bbox": {"l": 80.0, "t": 486.3299865722656, "r": 511.7200012207031, "b": 335.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 908]}], "orig": "As an example, if we consider a hash function like MD5 where the output length equals L=16 bytes (128 bits) the attacker needs to acquire the correct message authentication tags computed (with the _same_ secret key K!) on about 2**64 known plaintexts. This would require the processing of at least 2**64 blocks under H, an impossible task in any realistic scenario (for a block length of 64 bytes this would take 250,000 years in a continuous 1Gbps link, and without changing the secret key K during all this time). This attack could become realistic only if serious flaws in the collision behavior of the function H are discovered (e.g. collisions found after 2**30 messages). Such a discovery would determine the immediate replacement of the function H (the effects of such failure would be far more severe for the traditional uses of H in the context of digital signatures, public key certificates, etc.).", "text": "As an example, if we consider a hash function like MD5 where the output length equals L=16 bytes (128 bits) the attacker needs to acquire the correct message authentication tags computed (with the _same_ secret key K!) on about 2**64 known plaintexts. This would require the processing of at least 2**64 blocks under H, an impossible task in any realistic scenario (for a block length of 64 bytes this would take 250,000 years in a continuous 1Gbps link, and without changing the secret key K during all this time). This attack could become realistic only if serious flaws in the collision behavior of the function H are discovered (e.g. collisions found after 2**30 messages). Such a discovery would determine the immediate replacement of the function H (the effects of such failure would be far more severe for the traditional uses of H in the context of digital signatures, public key certificates, etc.)."}, {"self_ref": "#/texts/62", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 6, "bbox": {"l": 80.0, "t": 321.3299865722656, "r": 511.739990234375, "b": 247.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 457]}], "orig": "Note: this attack needs to be strongly contrasted with regular collision attacks on cryptographic hash functions where no secret key is involved and where 2**64 off-line parallelizable (!) operations suffice to find collisions. The latter attack is approaching feasibility [VW] while the birthday attack on HMAC is totally impractical. (In the above examples, if one uses a hash function with, say, 160 bit of output then 2**64 should be replaced by 2**80.)", "text": "Note: this attack needs to be strongly contrasted with regular collision attacks on cryptographic hash functions where no secret key is involved and where 2**64 off-line parallelizable (!) operations suffice to find collisions. The latter attack is approaching feasibility [VW] while the birthday attack on HMAC is totally impractical. (In the above examples, if one uses a hash function with, say, 160 bit of output then 2**64 should be replaced by 2**80.)"}, {"self_ref": "#/texts/63", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 6, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "Krawczyk, et. al. Informational [Page 6]", "text": "Krawczyk, et. al. Informational [Page 6]"}, {"self_ref": "#/texts/64", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 7, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/65", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 7, "bbox": {"l": 80.0, "t": 717.3300170898438, "r": 505.44000244140625, "b": 665.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 315]}], "orig": "A correct implementation of the above construction, the choice of random (or cryptographically pseudorandom) keys, a secure key exchange mechanism, frequent key refreshments, and good secrecy protection of keys are all essential ingredients for the security of the integrity verification mechanism provided by HMAC.", "text": "A correct implementation of the above construction, the choice of random (or cryptographically pseudorandom) keys, a secure key exchange mechanism, frequent key refreshments, and good secrecy protection of keys are all essential ingredients for the security of the integrity verification mechanism provided by HMAC."}, {"self_ref": "#/texts/66", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 7, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "Krawczyk, et. al. Informational [Page 7]", "text": "Krawczyk, et. al. Informational [Page 7]"}, {"self_ref": "#/texts/67", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 8, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/68", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 8, "bbox": {"l": 80.08000183105469, "t": 717.3300170898438, "r": 217.22999572753906, "b": 709.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 23]}], "orig": "Appendix -- Sample Code", "text": "Appendix -- Sample Code"}, {"self_ref": "#/texts/69", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "code", "prov": [{"page_no": 8, "bbox": {"l": 80.0, "t": 695.3300170898438, "r": 511.44000244140625, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 1094]}], "orig": "For the sake of illustration we provide the following sample code for the implementation of HMAC-MD5 as well as some corresponding test vectors (the code is based on MD5 code as described in [MD5]). /* ** Function: hmac_md5 */ void hmac_md5(text, text_len, key, key_len, digest) unsigned char* text; /* pointer to data stream */ int text_len; /* length of data stream */ unsigned char* key; /* pointer to authentication key */ int key_len; /* length of authentication key */ caddr_t digest; /* caller digest to be filled in */ { MD5_CTX context; unsigned char k_ipad[65]; /* inner padding * key XORd with ipad */ unsigned char k_opad[65]; /* outer padding * key XORd with opad */ unsigned char tk[16]; int i; /* if key is longer than 64 bytes reset it to key=MD5(key) */ if (key_len > 64) { MD5_CTX tctx; MD5Init(&tctx); MD5Update(&tctx, key, key_len); MD5Final(tk, &tctx); key = tk; key_len = 16; } /* * the HMAC_MD5 transform looks like: * * MD5(K XOR opad, MD5(K XOR ipad, text)) * * where K is an n byte key * ipad is the byte 0x36 repeated 64 times Krawczyk, et. al. Informational [Page 8]", "text": "For the sake of illustration we provide the following sample code for the implementation of HMAC-MD5 as well as some corresponding test vectors (the code is based on MD5 code as described in [MD5]). /* ** Function: hmac_md5 */ void hmac_md5(text, text_len, key, key_len, digest) unsigned char* text; /* pointer to data stream */ int text_len; /* length of data stream */ unsigned char* key; /* pointer to authentication key */ int key_len; /* length of authentication key */ caddr_t digest; /* caller digest to be filled in */ { MD5_CTX context; unsigned char k_ipad[65]; /* inner padding * key XORd with ipad */ unsigned char k_opad[65]; /* outer padding * key XORd with opad */ unsigned char tk[16]; int i; /* if key is longer than 64 bytes reset it to key=MD5(key) */ if (key_len > 64) { MD5_CTX tctx; MD5Init(&tctx); MD5Update(&tctx, key, key_len); MD5Final(tk, &tctx); key = tk; key_len = 16; } /* * the HMAC_MD5 transform looks like: * * MD5(K XOR opad, MD5(K XOR ipad, text)) * * where K is an n byte key * ipad is the byte 0x36 repeated 64 times Krawczyk, et. al. Informational [Page 8]", "captions": [], "references": [], "footnotes": [], "code_language": "unknown"}, {"self_ref": "#/texts/70", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/71", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "code", "prov": [{"page_no": 9, "bbox": {"l": 80.0, "t": 717.3300170898438, "r": 510.8900146484375, "b": 368.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 861]}], "orig": "* opad is the byte 0x5c repeated 64 times * and text is the data being protected */ /* start out by storing key in pads */ bzero( k_ipad, sizeof k_ipad); bzero( k_opad, sizeof k_opad); bcopy( key, k_ipad, key_len); bcopy( key, k_opad, key_len); /* XOR key with ipad and opad values */ for (i=0; i<64; i++) { k_ipad[i] ^= 0x36; k_opad[i] ^= 0x5c; } /* * perform inner MD5 */ MD5Init(&context); /* init context for 1st * pass */ MD5Update(&context, k_ipad, 64) /* start with inner pad */ MD5Update(&context, text, text_len); /* then text of datagram */ MD5Final(digest, &context); /* finish up 1st pass */ /* * perform outer MD5 */ MD5Init(&context); /* init context for 2nd * pass */ MD5Update(&context, k_opad, 64); /* start with outer pad */ MD5Update(&context, digest, 16); /* then results of 1st * hash */ MD5Final(digest, &context); /* finish up 2nd pass */", "text": "* opad is the byte 0x5c repeated 64 times * and text is the data being protected */ /* start out by storing key in pads */ bzero( k_ipad, sizeof k_ipad); bzero( k_opad, sizeof k_opad); bcopy( key, k_ipad, key_len); bcopy( key, k_opad, key_len); /* XOR key with ipad and opad values */ for (i=0; i<64; i++) { k_ipad[i] ^= 0x36; k_opad[i] ^= 0x5c; } /* * perform inner MD5 */ MD5Init(&context); /* init context for 1st * pass */ MD5Update(&context, k_ipad, 64) /* start with inner pad */ MD5Update(&context, text, text_len); /* then text of datagram */ MD5Final(digest, &context); /* finish up 1st pass */ /* * perform outer MD5 */ MD5Init(&context); /* init context for 2nd * pass */ MD5Update(&context, k_opad, 64); /* start with outer pad */ MD5Update(&context, digest, 16); /* then results of 1st * hash */ MD5Final(digest, &context); /* finish up 2nd pass */", "captions": [], "references": [], "footnotes": [], "code_language": "unknown"}, {"self_ref": "#/texts/72", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 81.97000122070312, "t": 365.1300048828125, "r": 84.02999877929688, "b": 357.739990234375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 1]}], "orig": "}", "text": "}"}, {"self_ref": "#/texts/73", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 80.69999694824219, "t": 343.75, "r": 509.75, "b": 335.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 72]}], "orig": "Test Vectors (Trailing \u2019\\0\u2019 of a character string not included in test):", "text": "Test Vectors (Trailing \u2019\\0\u2019 of a character string not included in test):"}, {"self_ref": "#/texts/74", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 80.0, "t": 321.2699890136719, "r": 379.4200134277344, "b": 313.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "key = 0x0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b", "text": "key = 0x0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b"}, {"self_ref": "#/texts/75", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 80.0, "t": 310.2699890136719, "r": 222.99000549316406, "b": 301.2699890136719, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 18]}], "orig": "key_len = 16 bytes", "text": "key_len = 16 bytes"}, {"self_ref": "#/texts/76", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 80.0, "t": 299.3299865722656, "r": 234.69000244140625, "b": 292.8500061035156, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 17]}], "orig": "data = \"Hi There\"", "text": "data = \"Hi There\""}, {"self_ref": "#/texts/77", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 80.0, "t": 288.2699890136719, "r": 222.99000549316406, "b": 279.2699890136719, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 18]}], "orig": "data_len = 8 bytes", "text": "data_len = 8 bytes"}, {"self_ref": "#/texts/78", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 80.0, "t": 277.3299865722656, "r": 379.8299865722656, "b": 269.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 43]}], "orig": "digest = 0x9294727a3638bb1c13f48ef8158bfc9d", "text": "digest = 0x9294727a3638bb1c13f48ef8158bfc9d"}, {"self_ref": "#/texts/79", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 92.93000030517578, "t": 255.1300048828125, "r": 210.69000244140625, "b": 247.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 12]}], "orig": "key = \"Jefe\"", "text": "key = \"Jefe\""}, {"self_ref": "#/texts/80", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 92.62000274658203, "t": 244.3300018310547, "r": 354.69000244140625, "b": 236.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 37]}], "orig": "data = \"what do ya want for nothing?\"", "text": "data = \"what do ya want for nothing?\""}, {"self_ref": "#/texts/81", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 92.62000274658203, "t": 233.27000427246094, "r": 222.99000549316406, "b": 224.27000427246094, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 19]}], "orig": "data_len = 28 bytes", "text": "data_len = 28 bytes"}, {"self_ref": "#/texts/82", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 92.62000274658203, "t": 222.3300018310547, "r": 378.8800048828125, "b": 214.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 43]}], "orig": "digest = 0x750c783e6ab0b503eaa86e310a5db738", "text": "digest = 0x750c783e6ab0b503eaa86e310a5db738"}, {"self_ref": "#/texts/83", "parent": {"$ref": "#/groups/6"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 92.93000030517578, "t": 200.27000427246094, "r": 379.92999267578125, "b": 192.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "key = 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "text": "key = 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"}, {"self_ref": "#/texts/84", "parent": {"$ref": "#/groups/7"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 9, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 40]}], "orig": "Krawczyk, et. al. Informational [Page 9]", "text": "Krawczyk, et. al. Informational [Page 9]"}, {"self_ref": "#/texts/85", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/86", "parent": {"$ref": "#/groups/8"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 717.27001953125, "r": 222.99000549316406, "b": 708.27001953125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 16]}], "orig": "key_len 16 bytes", "text": "key_len 16 bytes"}, {"self_ref": "#/texts/87", "parent": {"$ref": "#/groups/8"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 706.27001953125, "r": 323.75, "b": 699.8499755859375, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 32]}], "orig": "data = 0xDDDDDDDDDDDDDDDDDDDD...", "text": "data = 0xDDDDDDDDDDDDDDDDDDDD..."}, {"self_ref": "#/texts/88", "parent": {"$ref": "#/groups/8"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 694.7100219726562, "r": 323.75, "b": 688.8599853515625, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 25]}], "orig": "..DDDDDDDDDDDDDDDDDDDD...", "text": "..DDDDDDDDDDDDDDDDDDDD..."}, {"self_ref": "#/texts/89", "parent": {"$ref": "#/groups/8"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 683.7100219726562, "r": 323.75, "b": 677.8599853515625, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 25]}], "orig": "..DDDDDDDDDDDDDDDDDDDD...", "text": "..DDDDDDDDDDDDDDDDDDDD..."}, {"self_ref": "#/texts/90", "parent": {"$ref": "#/groups/8"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 672.7100219726562, "r": 323.75, "b": 666.8599853515625, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 25]}], "orig": "..DDDDDDDDDDDDDDDDDDDD...", "text": "..DDDDDDDDDDDDDDDDDDDD..."}, {"self_ref": "#/texts/91", "parent": {"$ref": "#/groups/8"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 661.7100219726562, "r": 307.58001708984375, "b": 655.8599853515625, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 22]}], "orig": "..DDDDDDDDDDDDDDDDDDDD", "text": "..DDDDDDDDDDDDDDDDDDDD"}, {"self_ref": "#/texts/92", "parent": {"$ref": "#/groups/8"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 651.27001953125, "r": 222.99000549316406, "b": 642.27001953125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 19]}], "orig": "data_len = 50 bytes", "text": "data_len = 50 bytes"}, {"self_ref": "#/texts/93", "parent": {"$ref": "#/groups/8"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 640.3300170898438, "r": 379.1300048828125, "b": 632.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 43]}], "orig": "digest = 0x56be34521d144c88dbb8c733f0e8b3f6", "text": "digest = 0x56be34521d144c88dbb8c733f0e8b3f6"}, {"self_ref": "#/texts/94", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 10, "bbox": {"l": 80.08000183105469, "t": 618.1300048828125, "r": 168.989990234375, "b": 610.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 15]}], "orig": "Acknowledgments", "text": "Acknowledgments", "level": 1}, {"self_ref": "#/texts/95", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 596.3300170898438, "r": 499.739990234375, "b": 522.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 429]}], "orig": "Pau-Chen Cheng, Jeff Kraemer, and Michael Oehler, have provided useful comments on early drafts, and ran the first interoperability tests of this specification. Jeff and Pau-Chen kindly provided the sample code and test vectors that appear in the appendix. Burt Kaliski, Bart Preneel, Matt Robshaw, Adi Shamir, and Paul van Oorschot have provided useful comments and suggestions during the investigation of the HMAC construction.", "text": "Pau-Chen Cheng, Jeff Kraemer, and Michael Oehler, have provided useful comments on early drafts, and ran the first interoperability tests of this specification. Jeff and Pau-Chen kindly provided the sample code and test vectors that appear in the appendix. Burt Kaliski, Bart Preneel, Matt Robshaw, Adi Shamir, and Paul van Oorschot have provided useful comments and suggestions during the investigation of the HMAC construction."}, {"self_ref": "#/texts/96", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 10, "bbox": {"l": 80.43000030517578, "t": 508.1300048828125, "r": 138.989990234375, "b": 501.8500061035156, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 10]}], "orig": "References", "text": "References", "level": 1}, {"self_ref": "#/texts/97", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 486.3299865722656, "r": 487.4200134277344, "b": 456.54998779296875, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 158]}], "orig": "[ANSI] ANSI X9.9, \"American National Standard for Financial Institution Message Authentication (Wholesale),\" American Bankers Association, 1981. Revised 1986.", "text": "[ANSI] ANSI X9.9, \"American National Standard for Financial Institution Message Authentication (Wholesale),\" American Bankers Association, 1981. Revised 1986."}, {"self_ref": "#/texts/98", "parent": {"$ref": "#/groups/9"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 442.3299865722656, "r": 493.2900085449219, "b": 424.8599853515625, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 70]}], "orig": "[Atk] Atkinson, R., \"IP Authentication Header\", RFC 1826, August 1995.", "text": "[Atk] Atkinson, R., \"IP Authentication Header\", RFC 1826, August 1995.", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/99", "parent": {"$ref": "#/groups/9"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 409.3299865722656, "r": 461.1199951171875, "b": 368.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 199]}], "orig": "[BCK1] M. Bellare, R. Canetti, and H. Krawczyk, \"Keyed Hash Functions and Message Authentication\", Proceedings of Crypto'96, LNCS 1109, pp. 1-15. (http://www.research.ibm.com/security/keyed-md5.html)", "text": "[BCK1] M. Bellare, R. Canetti, and H. Krawczyk, \"Keyed Hash Functions and Message Authentication\", Proceedings of Crypto'96, LNCS 1109, pp. 1-15. (http://www.research.ibm.com/security/keyed-md5.html)", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/100", "parent": {"$ref": "#/groups/9"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 354.3299865722656, "r": 509.5199890136719, "b": 324.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 133]}], "orig": "[BCK2] M. Bellare, R. Canetti, and H. Krawczyk, \"Pseudorandom Functions Revisited: The Cascade Construction\", Proceedings of FOCS'96.", "text": "[BCK2] M. Bellare, R. Canetti, and H. Krawczyk, \"Pseudorandom Functions Revisited: The Cascade Construction\", Proceedings of FOCS'96.", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/101", "parent": {"$ref": "#/groups/9"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 310.3299865722656, "r": 485.5199890136719, "b": 280.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 162]}], "orig": "[Dobb] H. Dobbertin, \"The Status of MD5 After a Recent Attack\", RSA Labs' CryptoBytes, Vol. 2 No. 2, Summer 1996. http://www.rsa.com/rsalabs/pubs/cryptobytes.html", "text": "[Dobb] H. Dobbertin, \"The Status of MD5 After a Recent Attack\", RSA Labs' CryptoBytes, Vol. 2 No. 2, Summer 1996. http://www.rsa.com/rsalabs/pubs/cryptobytes.html", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/102", "parent": {"$ref": "#/groups/9"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 10, "bbox": {"l": 80.0, "t": 266.3299865722656, "r": 511.5299987792969, "b": 225.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 203]}], "orig": "[PV] B. Preneel and P. van Oorschot, \"Building fast MACs from hash functions\", Advances in Cryptology -- CRYPTO'95 Proceedings, Lecture Notes in Computer Science, Springer-Verlag Vol.963, 1995, pp. 1-14.", "text": "[PV] B. Preneel and P. van Oorschot, \"Building fast MACs from hash functions\", Advances in Cryptology -- CRYPTO'95 Proceedings, Lecture Notes in Computer Science, Springer-Verlag Vol.963, 1995, pp. 1-14.", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/103", "parent": {"$ref": "#/groups/9"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 10, "bbox": {"l": 100.80000305175781, "t": 211.3300018310547, "r": 425.5199890136719, "b": 192.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 75]}], "orig": "[MD5] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, April 1992.", "text": "[MD5] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, April 1992.", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/104", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "code", "prov": [{"page_no": 10, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 41]}], "orig": "Krawczyk, et. al. Informational [Page 10]", "text": "Krawczyk, et. al. Informational [Page 10]", "captions": [], "references": [], "footnotes": [], "code_language": "unknown"}, {"self_ref": "#/texts/105", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 11, "bbox": {"l": 80.43000030517578, "t": 750.27001953125, "r": 510.7900085449219, "b": 742.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 27]}], "orig": "RFC 2104 HMAC February 1997", "text": "RFC 2104 HMAC February 1997"}, {"self_ref": "#/texts/106", "parent": {"$ref": "#/groups/10"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 717.3300170898438, "r": 485.5199890136719, "b": 699.8599853515625, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 68]}], "orig": "[MM] Meyer, S. and Matyas, S.M., Cryptography, New York Wiley, 1982.", "text": "[MM] Meyer, S. and Matyas, S.M., Cryptography, New York Wiley, 1982.", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/107", "parent": {"$ref": "#/groups/10"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 684.3300170898438, "r": 505.92999267578125, "b": 643.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 211]}], "orig": "[RIPEMD] H. Dobbertin, A. Bosselaers, and B. Preneel, \"RIPEMD-160: A strengthened version of RIPEMD\", Fast Software Encryption, LNCS Vol 1039, pp. 71-82. ftp://ftp.esat.kuleuven.ac.be/pub/COSIC/bosselae/ripemd/.", "text": "[RIPEMD] H. Dobbertin, A. Bosselaers, and B. Preneel, \"RIPEMD-160: A strengthened version of RIPEMD\", Fast Software Encryption, LNCS Vol 1039, pp. 71-82. ftp://ftp.esat.kuleuven.ac.be/pub/COSIC/bosselae/ripemd/.", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/108", "parent": {"$ref": "#/groups/10"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 629.3300170898438, "r": 473.75, "b": 621.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 61]}], "orig": "[SHA] NIST, FIPS PUB 180-1: Secure Hash Standard, April 1995.", "text": "[SHA] NIST, FIPS PUB 180-1: Secure Hash Standard, April 1995.", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/109", "parent": {"$ref": "#/groups/10"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 607.3300170898438, "r": 503.1199951171875, "b": 555.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 274]}], "orig": "[Tsu] G. Tsudik, \"Message authentication with one-way hash functions\", In Proceedings of Infocom'92, May 1992. (Also in \"Access Control and Policy Enforcement in Internetworks\", Ph.D. Dissertation, Computer Science Department, University of Southern California, April 1991.)", "text": "[Tsu] G. Tsudik, \"Message authentication with one-way hash functions\", In Proceedings of Infocom'92, May 1992. (Also in \"Access Control and Policy Enforcement in Internetworks\", Ph.D. Dissertation, Computer Science Department, University of Southern California, April 1991.)", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/110", "parent": {"$ref": "#/groups/10"}, "children": [], "content_layer": "body", "label": "list_item", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 541.3300170898438, "r": 493.8299865722656, "b": 500.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 223]}], "orig": "[VW] P. van Oorschot and M. Wiener, \"Parallel Collision Search with Applications to Hash Functions and Discrete Logarithms\", Proceedings of the 2nd ACM Conf. Computer and Communications Security, Fairfax, VA, November 1994.", "text": "[VW] P. van Oorschot and M. Wiener, \"Parallel Collision Search with Applications to Hash Functions and Discrete Logarithms\", Proceedings of the 2nd ACM Conf. Computer and Communications Security, Fairfax, VA, November 1994.", "enumerated": false, "marker": ""}, {"self_ref": "#/texts/111", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "section_header", "prov": [{"page_no": 11, "bbox": {"l": 80.08000183105469, "t": 486.1300048828125, "r": 186.989990234375, "b": 479.8500061035156, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 18]}], "orig": "Authors\u2019 Addresses", "text": "Authors\u2019 Addresses", "level": 1}, {"self_ref": "#/texts/112", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 464.1300048828125, "r": 283.44000244140625, "b": 423.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 84]}], "orig": "Hugo Krawczyk IBM T.J. Watson Research Center P.O.Box 704 Yorktown Heights, NY 10598", "text": "Hugo Krawczyk IBM T.J. Watson Research Center P.O.Box 704 Yorktown Heights, NY 10598"}, {"self_ref": "#/texts/113", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 409.3299865722656, "r": 253.92999267578125, "b": 401.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 26]}], "orig": "EMail: hugo@watson.ibm.com", "text": "EMail: hugo@watson.ibm.com"}, {"self_ref": "#/texts/114", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 387.3299865722656, "r": 337.6199951171875, "b": 324.54998779296875, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 144]}], "orig": "Mihir Bellare Dept of Computer Science and Engineering Mail Code 0114 University of California at San Diego 9500 Gilman Drive La Jolla, CA 92093", "text": "Mihir Bellare Dept of Computer Science and Engineering Mail Code 0114 University of California at San Diego 9500 Gilman Drive La Jolla, CA 92093"}, {"self_ref": "#/texts/115", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 310.3299865722656, "r": 241.42999267578125, "b": 303.3800048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 24]}], "orig": "EMail: mihir@cs.ucsd.edu", "text": "EMail: mihir@cs.ucsd.edu"}, {"self_ref": "#/texts/116", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 11, "bbox": {"l": 80.0, "t": 288.3299865722656, "r": 283.44000244140625, "b": 247.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 82]}], "orig": "Ran Canetti IBM T.J. Watson Research Center P.O.Box 704 Yorktown Heights, NY 10598", "text": "Ran Canetti IBM T.J. Watson Research Center P.O.Box 704 Yorktown Heights, NY 10598"}, {"self_ref": "#/texts/117", "parent": {"$ref": "#/body"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 11, "bbox": {"l": 98.43000030517578, "t": 233.3300018310547, "r": 271.92999267578125, "b": 226.3800048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 29]}], "orig": "EMail: canetti@watson.ibm.com", "text": "EMail: canetti@watson.ibm.com"}, {"self_ref": "#/texts/118", "parent": {"$ref": "#/groups/11"}, "children": [], "content_layer": "body", "label": "text", "prov": [{"page_no": 11, "bbox": {"l": 80.43000030517578, "t": 156.3300018310547, "r": 509.2200012207031, "b": 148.1300048828125, "coord_origin": "BOTTOMLEFT"}, "charspan": [0, 41]}], "orig": "Krawczyk, et. al. Informational [Page 11]", "text": "Krawczyk, et. al. Informational [Page 11]"}], "pictures": [], "tables": [], "key_value_items": [], "form_items": [], "pages": {"1": {"size": {"width": 612.0, "height": 792.0}, "page_no": 1}, "2": {"size": {"width": 612.0, "height": 792.0}, "page_no": 2}, "3": {"size": {"width": 612.0, "height": 792.0}, "page_no": 3}, "4": {"size": {"width": 612.0, "height": 792.0}, "page_no": 4}, "5": {"size": {"width": 612.0, "height": 792.0}, "page_no": 5}, "6": {"size": {"width": 612.0, "height": 792.0}, "page_no": 6}, "7": {"size": {"width": 612.0, "height": 792.0}, "page_no": 7}, "8": {"size": {"width": 612.0, "height": 792.0}, "page_no": 8}, "9": {"size": {"width": 612.0, "height": 792.0}, "page_no": 9}, "10": {"size": {"width": 612.0, "height": 792.0}, "page_no": 10}, "11": {"size": {"width": 612.0, "height": 792.0}, "page_no": 11}}}